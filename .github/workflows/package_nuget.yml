name: Build, Test, Analyze and Publish NPM Package

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-test-analyze-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://npm.pkg.github.com/'

      - name: Install dependencies
        run: cd notifications && npm ci

      - name: Run unit tests and generate coverage
        run: cd notifications && npm run test -- --coverage

      - name: Upload test coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: notifications/coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: notifications
          args: >
            -Dsonar.organization=dylan-tapia
            -Dsonar.projectKey=dylan-tapia_lap1-u2-noti
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build package
        run: |
          cd notifications
          npm version patch --no-git-tag-version
          npm pack

      - name: Configure npm for GitHub Packages
        run: echo "//npm.pkg.github.com/:_authToken=${GH_TOKEN}" > ~/.npmrc
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Publish package to GitHub Packages
        run: |
          cd notifications
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}

  publish-documentation:
    name: Publish Documentation
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies (customer-app)
        run: cd customer-app && npm ci

      - name: SonarCloud Scan (customer-app)
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: customer-app
          args: >
            -Dsonar.organization=dylan-tapia
            -Dsonar.projectKey=dylan-tapia_lap1-u2-cus
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate documentation for customer-app with Compodoc
        run: cd customer-app && npx @compodoc/compodoc -p tsconfig.json -d documentation --silent

      - name: Deploy customer-app docs to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./customer-app/documentation
          publish_branch: docs
          destination_dir: customer-app

      - name: Install dependencies (notifications)
        run: cd notifications && npm ci

      - name: SonarCloud Scan (notifications)
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: notifications
          args: >
            -Dsonar.organization=dylan-tapia
            -Dsonar.projectKey=dylan-tapia_notifications
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate documentation for notifications with Compodoc
        run: cd notifications && npx @compodoc/compodoc -p tsconfig.json -d documentation --silent

      - name: Deploy notifications docs to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./notifications/documentation
          publish_branch: docs
          destination_dir: notifications